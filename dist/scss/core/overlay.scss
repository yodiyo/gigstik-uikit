// Name:            Overlay
// Description:     Defines styles for image overlays
//
// Component:       `yb-overlay`
//
// Sub-objects:     `yb-overlay-panel`
//                  `yb-overlay-hover`
//                  `yb-overlay-active`
//                  `yb-overlay-icon`
//
// Modifier:        `yb-overlay-background`
//                  `yb-overlay-image`
//                  `yb-overlay-top`
//                  `yb-overlay-bottom`
//                  `yb-overlay-left`
//                  `yb-overlay-right`
//                  `yb-overlay-fade`
//                  `yb-overlay-scale`
//                  `yb-overlay-spin`
//                  `yb-overlay-grayscale`
//                  `yb-overlay-slide-top`
//                  `yb-overlay-slide-bottom`
//                  `yb-overlay-slide-left`
//                  `yb-overlay-slide-right`
//
// DEPRECATED:      `yb-overlay-area`
//                  `yb-overlay-area-content`
//                  `yb-overlay-caption`
//                  `yb-overlay-toggle`
//
// States:          `yb-hover`
//                  `yb-active`
//                  `yb-ignore`
//
// Uses:            Icon: `[class*='yb-icon-']`
//                  `yb-border-circle`
//
// Markup:
//
// <!-- yb-overlay -->
// <figure class="yb-overlay" href="">
//     <img src="" alt="">
//     <figcaption class="yb-overlay-panel"></figcaption>
// </figure>
//
// ========================================================================


// Variables
// ========================================================================

$overlay-panel-padding:                          20px !default;
$overlay-panel-color:                            #fff !default;

$overlay-panel-background:                       rgba(0,0,0,0.5) !default;

$overlay-icon:                                   "\f002" !default;
$overlay-icon-size:                              50px !default;
$overlay-icon-color:                             #fff !default;

$overlay-fade-in-opacity:                        1 !default;
$overlay-fade-out-opacity:                       0.7 !default;

$overlay-scale-in-scale:                         1.1 !default;
$overlay-scale-out-scale:                        1 !default;

$overlay-spin-in-scale:                          1.1 !default;
$overlay-spin-out-scale:                         1 !default;
$overlay-spin-in-rotate:                         3deg !default;
$overlay-spin-out-rotate:                        0deg !default;

$overlay-panel-link-color:                       inherit !default;
$overlay-panel-link-text-decoration:             underline !default;

// DEPRECATED
$overlay-area-background:                        rgba(0,0,0,0.3) !default;

$overlay-area-icon:                              "\f002" !default;
$overlay-area-icon-size:                         50px !default;
$overlay-area-icon-color:                        #fff !default;

$overlay-area-content-font-size:                 1rem !default;
$overlay-area-content-padding-horizontal:        15px !default;
$overlay-area-content-color:                     #fff !default;
$overlay-area-content-link-color:                inherit !default;

$overlay-caption-background:                     rgba(0,0,0,0.5) !default;
$overlay-caption-padding:                        15px !default;
$overlay-caption-color:                          #fff !default;


/* ========================================================================
   Component: Overlay
 ========================================================================== */

/*
 * 1. Container width fits its content
 * 2. Create position context
 * 3. Set max-width for responsive images to prevent `inline-block` consequences
 * 4. Remove the gap between the container and its child element
 * 5. Needed for transitions and to fixed wrong scaling calculation for images in Chrome
 * 6. Fixed `overflow: hidden` to be ignored with border-radius and CSS transforms in Webkit
 * 7. Reset margin
 */

.yb-overlay {
    /* 1 */
    display: inline-block;
    /* 2 */
    position: relative;
    /* 3 */
    max-width: 100%;
    /* 4 */
    vertical-align: middle;
    /* 5 */
    overflow: hidden;
    /* 6 */
    -webkit-transform: translateZ(0);
    /* 7 */
    margin: 0;
}

/* 6 for Safari */
.yb-overlay.yb-border-circle { -webkit-mask-image: -webkit-radial-gradient(circle, white 100%, black 100%); }

/*
 * Remove margin from content
 */

.yb-overlay > :first-child { margin-bottom: 0; }


/* Sub-object `yb-overlay-panel`
 ========================================================================== */

/*
 * 1. Position cover
 * 2. Style
 */

.yb-overlay-panel {
    /* 1 */
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    /* 2 */
    padding: $overlay-panel-padding;
    color: $overlay-panel-color;
    @include hook-overlay-panel();
}

/*
 * Remove margin from the last-child
 */

.yb-overlay-panel > :last-child,
.yb-overlay-panel.yb-flex > * > :last-child { margin-bottom: 0; }

/*
 * Keep color for headings if the default heading color is changed
 */

.yb-overlay-panel h1,
.yb-overlay-panel h2,
.yb-overlay-panel h3,
.yb-overlay-panel h4,
.yb-overlay-panel h5,
.yb-overlay-panel h6 { color: inherit; }

.yb-overlay-panel a:not([class]) {
    color: $overlay-panel-link-color;
    text-decoration: $overlay-panel-link-text-decoration;
}

.yb-overlay-panel a[class*='yb-icon-']:not(.yb-icon-button) { color: $overlay-panel-link-color; }


/* Sub-object `yb-overlay-hover` and `yb-overlay-active`
 ========================================================================== */

.yb-overlay-hover:not(:hover):not(.yb-hover) .yb-overlay-panel:not(.yb-ignore) { opacity: 0; }

.yb-overlay-active :not(.yb-active) > .yb-overlay-panel:not(.yb-ignore) { opacity: 0; }


/* Modifier `yb-overlay-background`
 ========================================================================== */

.yb-overlay-background {
    background: $overlay-panel-background;
    @include hook-overlay-background();
}


/* Modifier `yb-overlay-image`
 ========================================================================== */

/*
 * Reset panel
 */

.yb-overlay-image {
    padding: 0;
    @include hook-overlay-image();
}


/* Position modifiers
 ========================================================================== */

.yb-overlay-top { bottom: auto; }

.yb-overlay-bottom { top: auto; }

.yb-overlay-left { right: auto; }

.yb-overlay-right { left: auto; }


/* Sub-object `yb-overlay-icon`
 ========================================================================== */

.yb-overlay-icon:before {
    content: $overlay-icon;
    position: absolute;
    top: 50%;
    left: 50%;
    width: $overlay-icon-size;
    height: $overlay-icon-size;
    margin-top: -($overlay-icon-size / 2);
    margin-left: -($overlay-icon-size / 2);
    font-size: $overlay-icon-size;
    line-height: 1;
    font-family: FontAwesome;
    text-align: center;
    color: $overlay-icon-color;
    @include hook-overlay-icon();
}


/* Transitions
 ========================================================================== */

.yb-overlay-fade,
.yb-overlay-scale,
.yb-overlay-spin,
.yb-overlay-grayscale,
.yb-overlay-blur,
[class*='yb-overlay-slide'] {
    transition-duration: 0.3s;
    transition-timing-function: ease-out;
    transition-property: opacity, transform, filter;
}

.yb-overlay-active .yb-overlay-fade,
.yb-overlay-active .yb-overlay-scale,
.yb-overlay-active .yb-overlay-spin,
.yb-overlay-active [class*='yb-overlay-slide'] { transition-duration: 0.8s; }

/*
 * Fade
 */

.yb-overlay-fade { opacity: $overlay-fade-out-opacity; }

.yb-overlay-hover:hover .yb-overlay-fade,
.yb-overlay-hover.yb-hover .yb-overlay-fade,
.yb-overlay-active .yb-active > .yb-overlay-fade { opacity: $overlay-fade-in-opacity; }

/*
 * Scale
 */

.yb-overlay-scale {
    -webkit-transform: scale($overlay-scale-out-scale);
    transform: scale($overlay-scale-out-scale);
}

.yb-overlay-hover:hover .yb-overlay-scale,
.yb-overlay-hover.yb-hover .yb-overlay-scale,
.yb-overlay-active .yb-active > .yb-overlay-scale {
    -webkit-transform: scale($overlay-scale-in-scale);
    transform: scale($overlay-scale-in-scale);
}

/*
 * Spin
 */

.yb-overlay-spin {
    -webkit-transform: scale($overlay-spin-out-scale) rotate($overlay-spin-out-rotate);
    transform: scale($overlay-spin-out-scale) rotate($overlay-spin-out-rotate);
}

.yb-overlay-hover:hover .yb-overlay-spin,
.yb-overlay-hover.yb-hover .yb-overlay-spin,
.yb-overlay-active .yb-active > .yb-overlay-spin {
    -webkit-transform: scale($overlay-spin-in-scale) rotate($overlay-spin-in-rotate);
    transform: scale($overlay-spin-in-scale) rotate($overlay-spin-in-rotate);
}

/*
 * Grayscale
 */

.yb-overlay-grayscale {
    -webkit-filter: grayscale(100%);
    filter: grayscale(100%);
}

.yb-overlay-hover:hover .yb-overlay-grayscale,
.yb-overlay-hover.yb-hover .yb-overlay-grayscale,
.yb-overlay-active .yb-active > .yb-overlay-grayscale {
    -webkit-filter: grayscale(0%);
    filter: grayscale(0%);
}

/*
 * Slide
 */

[class*='yb-overlay-slide'] { opacity: 0; }

/* Top */
.yb-overlay-slide-top {
    -webkit-transform: translateY(-100%);
    transform: translateY(-100%);
}

/* Bottom */
.yb-overlay-slide-bottom {
    -webkit-transform: translateY(100%);
    transform: translateY(100%);
}

/* Left */
.yb-overlay-slide-left {
    -webkit-transform: translateX(-100%);
    transform: translateX(-100%);
}

/* Right */
.yb-overlay-slide-right {
    -webkit-transform: translateX(100%);
    transform: translateX(100%);
}

/* Hover */
.yb-overlay-hover:hover [class*='yb-overlay-slide'],
.yb-overlay-hover.yb-hover [class*='yb-overlay-slide'],
.yb-overlay-active .yb-active > [class*='yb-overlay-slide'] {
    opacity: 1;
    -webkit-transform: translateX(0) translateY(0);
    transform: translateX(0) translateY(0);
}


/* DEPRECATED
 * Sub-object `yb-overlay-area`
 ========================================================================== */

/*
 * 1. Set position
 * 2. Set style
 * 3. Fade-in transition
 */

.yb-overlay-area {
    /* 1 */
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    /* 2 */
    background: $overlay-area-background;
    /* 3 */
    opacity: 0;
    -webkit-transition: opacity 0.15s linear;
    transition: opacity 0.15s linear;
    -webkit-transform: translate3d(0,0,0);
    @include hook-overlay-area();
}

/*
 * Hover
 * 1. `yb-hover` to support touch devices
 * 2. Use optional `yb-overlay-toggle` to trigger the overlay earlier
 */

.yb-overlay:hover .yb-overlay-area,
.yb-overlay.yb-hover .yb-overlay-area, // 1
.yb-overlay-toggle:hover .yb-overlay-area, // 2
.yb-overlay-toggle.yb-hover .yb-overlay-area { opacity: 1; }

/*
 * Icon
 */

.yb-overlay-area:empty:before {
    content: $overlay-area-icon;
    position: absolute;
    top: 50%;
    left: 50%;
    width: $overlay-area-icon-size;
    height: $overlay-area-icon-size;
    margin-top: -($overlay-area-icon-size / 2);
    margin-left: -($overlay-area-icon-size / 2);
    font-size: $overlay-area-icon-size;
    line-height: 1;
    font-family: FontAwesome;
    text-align: center;
    color: $overlay-area-icon-color;
    @include hook-overlay-area-icon();
}


/* DEPRECATED
 * Sub-object `yb-overlay-area-content`
 ========================================================================== */

/*
 * Remove whitespace between child elements when using `inline-block`
 * Needed for Firefox
 */

.yb-overlay-area:not(:empty) { font-size: 0.001px; }

/*
 * 1. Needed for vertical alignment
 */

.yb-overlay-area:not(:empty):before {
    content: '';
    display: inline-block;
    height: 100%;
    vertical-align: middle;
}

/*
 * 1. Set vertical alignment
 * 2. Reset whitespace hack
 * 3. Set horizontal alignment
 * 4. Set style
 */

.yb-overlay-area-content {
    /* 1 */
    display: inline-block;
    box-sizing: border-box;
    width: 100%;
    vertical-align: middle;
    /* 2 */
    font-size: $overlay-area-content-font-size;
    /* 3 */
    text-align: center;
    /* 4 */
    padding: 0 $overlay-area-content-padding-horizontal;
    color: $overlay-area-content-color;
    @include hook-overlay-area-content();
}

/*
 * Remove margin from the last-child
 */

.yb-overlay-area-content > :last-child { margin-bottom: 0; }

/*
 * Links in overlay area
 */

.yb-overlay-area-content a:not([class]),
.yb-overlay-area-content a:not([class]):hover { color: $overlay-area-content-link-color; }


/* DEPRECATED
 * Sub-object `yb-overlay-caption`
 ========================================================================== */

/*
 * 1. Set position
 * 2. Set style
 * 3. Fade-in transition
 */

.yb-overlay-caption {
    /* 1 */
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    /* 2 */
    padding: $overlay-caption-padding;
    background: $overlay-caption-background;
    color: $overlay-caption-color;
    /* 3 */
    opacity: 0;
    -webkit-transition: opacity 0.15s linear;
    transition: opacity 0.15s linear;
    -webkit-transform: translate3d(0,0,0);
    @include hook-overlay-caption();
}

/*
 * Hover
 * 1. `yb-hover` to support touch devices
 * 2. Use optional `yb-overlay-toggle` to trigger the overlay earlier
 */

.yb-overlay:hover .yb-overlay-caption,
.yb-overlay.yb-hover .yb-overlay-caption, // 1
.yb-overlay-toggle:hover .yb-overlay-caption, // 2
.yb-overlay-toggle.yb-hover .yb-overlay-caption { opacity: 1; }


// Hooks
// ========================================================================

@include hook-overlay-misc();

// @mixin hook-overlay-panel(){}
// @mixin hook-overlay-background(){}
// @mixin hook-overlay-image(){}
// @mixin hook-overlay-icon(){}
// @mixin hook-overlay-misc(){}

// DEPRECATED
// @mixin hook-overlay-area(){}
// @mixin hook-overlay-area-icon(){}
// @mixin hook-overlay-area-content(){}
// @mixin hook-overlay-caption(){}
